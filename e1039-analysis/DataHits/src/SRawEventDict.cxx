//
// File generated by rootcint at Tue Jul  7 13:06:07 2020

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIseaquestdIusersdIcmantilldIDarkQuestdIe1039mIanalysisdIDataHitsdIsrcdISRawEventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SRawEventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Hit(void *p = 0);
   static void *newArray_Hit(Long_t size, void *p);
   static void delete_Hit(void *p);
   static void deleteArray_Hit(void *p);
   static void destruct_Hit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Hit*)
   {
      ::Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Hit", ::Hit::Class_Version(), "/seaquest/users/cmantill/DarkQuest/e1039-analysis/DataHits/inc/SRawEvent.h", 33,
                  typeid(::Hit), DefineBehavior(ptr, ptr),
                  &::Hit::Dictionary, isa_proxy, 4,
                  sizeof(::Hit) );
      instance.SetNew(&new_Hit);
      instance.SetNewArray(&newArray_Hit);
      instance.SetDelete(&delete_Hit);
      instance.SetDeleteArray(&deleteArray_Hit);
      instance.SetDestructor(&destruct_Hit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Hit*)
   {
      return GenerateInitInstanceLocal((::Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void SRawEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SRawEvent(void *p = 0);
   static void *newArray_SRawEvent(Long_t size, void *p);
   static void delete_SRawEvent(void *p);
   static void deleteArray_SRawEvent(void *p);
   static void destruct_SRawEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SRawEvent*)
   {
      ::SRawEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SRawEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SRawEvent", ::SRawEvent::Class_Version(), "/seaquest/users/cmantill/DarkQuest/e1039-analysis/DataHits/inc/SRawEvent.h", 88,
                  typeid(::SRawEvent), DefineBehavior(ptr, ptr),
                  &::SRawEvent::Dictionary, isa_proxy, 4,
                  sizeof(::SRawEvent) );
      instance.SetNew(&new_SRawEvent);
      instance.SetNewArray(&newArray_SRawEvent);
      instance.SetDelete(&delete_SRawEvent);
      instance.SetDeleteArray(&deleteArray_SRawEvent);
      instance.SetDestructor(&destruct_SRawEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SRawEvent*)
   {
      return GenerateInitInstanceLocal((::SRawEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SRawEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void SRawMCEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SRawMCEvent(void *p = 0);
   static void *newArray_SRawMCEvent(Long_t size, void *p);
   static void delete_SRawMCEvent(void *p);
   static void deleteArray_SRawMCEvent(void *p);
   static void destruct_SRawMCEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SRawMCEvent*)
   {
      ::SRawMCEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SRawMCEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SRawMCEvent", ::SRawMCEvent::Class_Version(), "/seaquest/users/cmantill/DarkQuest/e1039-analysis/DataHits/inc/SRawEvent.h", 260,
                  typeid(::SRawMCEvent), DefineBehavior(ptr, ptr),
                  &::SRawMCEvent::Dictionary, isa_proxy, 4,
                  sizeof(::SRawMCEvent) );
      instance.SetNew(&new_SRawMCEvent);
      instance.SetNewArray(&newArray_SRawMCEvent);
      instance.SetDelete(&delete_SRawMCEvent);
      instance.SetDeleteArray(&deleteArray_SRawMCEvent);
      instance.SetDestructor(&destruct_SRawMCEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SRawMCEvent*)
   {
      return GenerateInitInstanceLocal((::SRawMCEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SRawMCEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Hit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Hit::Class_Name()
{
   return "Hit";
}

//______________________________________________________________________________
const char *Hit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Hit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Hit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Hit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Hit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *SRawEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SRawEvent::Class_Name()
{
   return "SRawEvent";
}

//______________________________________________________________________________
const char *SRawEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SRawEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SRawEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SRawEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SRawEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SRawEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SRawEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SRawEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *SRawMCEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SRawMCEvent::Class_Name()
{
   return "SRawMCEvent";
}

//______________________________________________________________________________
const char *SRawMCEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SRawMCEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SRawMCEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SRawMCEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SRawMCEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SRawMCEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SRawMCEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SRawMCEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(Hit::Class(),this);
   }
}

//______________________________________________________________________________
void Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Hit.
      TClass *R__cl = ::Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorID", &detectorID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "elementID", &elementID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdcTime", &tdcTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "driftDistance", &driftDistance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag", &flag);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Hit(void *p) {
      return  p ? new(p) ::Hit : new ::Hit;
   }
   static void *newArray_Hit(Long_t nElements, void *p) {
      return p ? new(p) ::Hit[nElements] : new ::Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_Hit(void *p) {
      delete ((::Hit*)p);
   }
   static void deleteArray_Hit(void *p) {
      delete [] ((::Hit*)p);
   }
   static void destruct_Hit(void *p) {
      typedef ::Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Hit

//______________________________________________________________________________
void SRawEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class SRawEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SRawEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(SRawEvent::Class(),this);
   }
}

//______________________________________________________________________________
void SRawEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SRawEvent.
      TClass *R__cl = ::SRawEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunID", &fRunID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventID", &fEventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpillID", &fSpillID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerBits", &fTriggerBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetPos", &fTargetPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTurnID", &fTurnID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRFID", &fRFID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntensity[33]", fIntensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerEmu", &fTriggerEmu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRoads[4]", fNRoads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNHits[63]", fNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAllHits", (void*)&fAllHits);
      R__insp.InspectMember("vector<Hit>", (void*)&fAllHits, "fAllHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerHits", (void*)&fTriggerHits);
      R__insp.InspectMember("vector<Hit>", (void*)&fTriggerHits, "fTriggerHits.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SRawEvent(void *p) {
      return  p ? new(p) ::SRawEvent : new ::SRawEvent;
   }
   static void *newArray_SRawEvent(Long_t nElements, void *p) {
      return p ? new(p) ::SRawEvent[nElements] : new ::SRawEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_SRawEvent(void *p) {
      delete ((::SRawEvent*)p);
   }
   static void deleteArray_SRawEvent(void *p) {
      delete [] ((::SRawEvent*)p);
   }
   static void destruct_SRawEvent(void *p) {
      typedef ::SRawEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SRawEvent

//______________________________________________________________________________
void SRawMCEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class SRawMCEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SRawMCEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(SRawMCEvent::Class(),this);
   }
}

//______________________________________________________________________________
void SRawMCEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SRawMCEvent.
      TClass *R__cl = ::SRawMCEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "weight", &weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xF", &xF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pT", &pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1", &x1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2", &x2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "costh", &costh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtx", &vtx);
      R__insp.InspectMember(vtx, "vtx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHits[2]", nHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_vertex[2]", p_vertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_station1[2]", p_station1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_station1[2]", v_station1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_station2[2]", p_station2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_station2[2]", v_station2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_station3[2]", p_station3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_station3[2]", v_station3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_station4[2]", p_station4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_station4[2]", v_station4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_stationH1[2]", p_stationH1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_stationH1[2]", v_stationH1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_stationH2[2]", p_stationH2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_stationH2[2]", v_stationH2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_stationH3[2]", p_stationH3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_stationH3[2]", v_stationH3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p_stationH4[2]", p_stationH4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v_stationH4[2]", v_stationH4);
      SRawEvent::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SRawMCEvent(void *p) {
      return  p ? new(p) ::SRawMCEvent : new ::SRawMCEvent;
   }
   static void *newArray_SRawMCEvent(Long_t nElements, void *p) {
      return p ? new(p) ::SRawMCEvent[nElements] : new ::SRawMCEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_SRawMCEvent(void *p) {
      delete ((::SRawMCEvent*)p);
   }
   static void deleteArray_SRawMCEvent(void *p) {
      delete [] ((::SRawMCEvent*)p);
   }
   static void destruct_SRawMCEvent(void *p) {
      typedef ::SRawMCEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SRawMCEvent

namespace ROOT {
   void vectorlEHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHitgR_Dictionary();
   static void *new_vectorlEHitgR(void *p = 0);
   static void *newArray_vectorlEHitgR(Long_t size, void *p);
   static void delete_vectorlEHitgR(void *p);
   static void deleteArray_vectorlEHitgR(void *p);
   static void destruct_vectorlEHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Hit>*)
   {
      vector<Hit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Hit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Hit>", -2, "prec_stl/vector", 49,
                  typeid(vector<Hit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Hit>) );
      instance.SetNew(&new_vectorlEHitgR);
      instance.SetNewArray(&newArray_vectorlEHitgR);
      instance.SetDelete(&delete_vectorlEHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHitgR);
      instance.SetDestructor(&destruct_vectorlEHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Hit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Hit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Hit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Hit> : new vector<Hit>;
   }
   static void *newArray_vectorlEHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Hit>[nElements] : new vector<Hit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHitgR(void *p) {
      delete ((vector<Hit>*)p);
   }
   static void deleteArray_vectorlEHitgR(void *p) {
      delete [] ((vector<Hit>*)p);
   }
   static void destruct_vectorlEHitgR(void *p) {
      typedef vector<Hit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Hit>

/********************************************************
* /seaquest/users/cmantill/DarkQuest/e1039-analysis/DataHits/src/SRawEventDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSRawEventDict();

extern "C" void G__set_cpp_environmentSRawEventDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/seaquest/users/cmantill/DarkQuest/e1039-analysis/DataHits/inc/SRawEvent.h");
  G__cpp_reset_tagtableSRawEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevSRawEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Hit */
static int G__SRawEventDict_276_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Hit[n];
     } else {
       p = new((void*) gvp) Hit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Hit;
     } else {
       p = new((void*) gvp) Hit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SRawEventDictLN_Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Hit((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Hit((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SRawEventDictLN_Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Hit((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Hit((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SRawEventDictLN_Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hit*) G__getstructoffset())->isInTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hit*) G__getstructoffset())->isHodoMask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hit*) G__getstructoffset())->isTriggerMask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hit*) G__getstructoffset())->setFlag((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hit*) G__getstructoffset())->resetFlag((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Hit*) G__getstructoffset())->setInTime((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Hit*) G__getstructoffset())->setInTime();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Hit*) G__getstructoffset())->setHodoMask((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Hit*) G__getstructoffset())->setHodoMask();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Hit*) G__getstructoffset())->setTriggerMask((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Hit*) G__getstructoffset())->setTriggerMask();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hit*) G__getstructoffset())->getSign());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hit*) G__getstructoffset())->uniqueID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hit*) G__getstructoffset())->getDetectorID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hit*) G__getstructoffset())->getElementID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Hit*) G__getstructoffset())->operator<(*(Hit*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Hit*) G__getstructoffset())->operator==(*(Hit*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hit*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_276_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SRawEventDict_276_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Hit(*(Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SRawEventDictLN_Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Hit G__THit;
static int G__SRawEventDict_276_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Hit*) (soff+(sizeof(Hit)*i)))->~G__THit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Hit*) (soff))->~G__THit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SRawEventDict_276_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Hit* dest = (Hit*) G__getstructoffset();
   *dest = *(Hit*) libp->para[0].ref;
   const Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SRawEvent */
static int G__SRawEventDict_278_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SRawEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SRawEvent[n];
     } else {
       p = new((void*) gvp) SRawEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SRawEvent;
     } else {
       p = new((void*) gvp) SRawEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<Int_t>* pobj;
         list<Int_t> xobj = ((SRawEvent*) G__getstructoffset())->getHitsIndexInDetector((Short_t) G__int(libp->para[0]));
         pobj = new list<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<Int_t>* pobj;
         list<Int_t> xobj = ((SRawEvent*) G__getstructoffset())->getHitsIndexInDetector((Short_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         pobj = new list<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<Int_t>* pobj;
         list<Int_t> xobj = ((SRawEvent*) G__getstructoffset())->getHitsIndexInSuperDetector((Short_t) G__int(libp->para[0]));
         pobj = new list<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<Int_t>* pobj;
         list<Int_t> xobj = ((SRawEvent*) G__getstructoffset())->getHitsIndexInDetectors(*(vector<Int_t>*) libp->para[0].ref);
         pobj = new list<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<Int_t>* pobj;
         list<Int_t> xobj = ((SRawEvent*) G__getstructoffset())->getAdjacentHitsIndex(*(Hit*) libp->para[0].ref);
         pobj = new list<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNTriggerHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNChamberHitsAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHodoHitsAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNPropHitsAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInD0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInD1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInD2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInD3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInD3p());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInD3m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInH1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInH2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInH3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInH4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInP1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInP2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInDetector((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInSuperDetector((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNHitsInDetectors(*(vector<Int_t>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Hit>& obj = ((SRawEvent*) G__getstructoffset())->getAllHits();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Hit>& obj = ((SRawEvent*) G__getstructoffset())->getTriggerHits();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Hit* pobj;
         Hit xobj = ((SRawEvent*) G__getstructoffset())->getTriggerHit((Int_t) G__int(libp->para[0]));
         pobj = new Hit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Hit* pobj;
         Hit xobj = ((SRawEvent*) G__getstructoffset())->getHit((Int_t) G__int(libp->para[0]));
         pobj = new Hit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Hit* pobj;
         Hit xobj = ((SRawEvent*) G__getstructoffset())->getHit((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
         pobj = new Hit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setHitFlag((Int_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setHitFlag((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Short_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getSpillID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setEventInfo((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setHit((Int_t) G__int(libp->para[0]), *((Hit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setTriggerHit((Int_t) G__int(libp->para[0]), *((Hit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->insertHit(*((Hit*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->insertTriggerHit(*((Hit*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->findHit((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((SRawEvent*) G__getstructoffset())->reIndex((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((SRawEvent*) G__getstructoffset())->reIndex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<SRawEvent::hit_pair>* pobj;
         list<SRawEvent::hit_pair> xobj = ((SRawEvent*) G__getstructoffset())->getPartialHitPairsInSuperDetector((Short_t) G__int(libp->para[0]));
         pobj = new list<SRawEvent::hit_pair>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         list<SRawEvent::hit_pair>* pobj;
         list<SRawEvent::hit_pair> xobj = ((SRawEvent*) G__getstructoffset())->getPartialHitPairsInSuperDetector((Short_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         pobj = new list<SRawEvent::hit_pair>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getTriggerBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setTriggerBits((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setTriggerBits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SRawEvent*) G__getstructoffset())->isTriggeredBy((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SRawEvent*) G__getstructoffset())->isNIMTriggered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SRawEvent*) G__getstructoffset())->isFPGATriggered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SRawEvent*) G__getstructoffset())->isEmuTriggered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNRoadsPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNRoadsNeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNRoadsPosTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNRoadsPosBot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNRoadsNegTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getNRoadsNegBot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 83, (long) ((SRawEvent*) G__getstructoffset())->getNRoads());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setTriggerEmu((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setNRoads((Short_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setNRoads((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getTargetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setTargetPos((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getTurnID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getRFID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getIntensity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getIntensity((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getIntensitySumBefore((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getIntensitySumBefore());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getIntensitySumAfter((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((SRawEvent*) G__getstructoffset())->getIntensitySumAfter());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((SRawEvent*) G__getstructoffset())->getIntensityAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setTurnID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setRFID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setIntensity((const Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setIntensity((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setIntensity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->mergeEvent(*(SRawEvent*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->setEventInfo((SRawEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->empty();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SRawEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRawEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SRawEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SRawEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRawEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SRawEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRawEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_278_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SRawEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SRawEventDict_278_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SRawEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SRawEvent(*(SRawEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SRawEvent G__TSRawEvent;
static int G__SRawEventDict_278_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SRawEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SRawEvent*) (soff+(sizeof(SRawEvent)*i)))->~G__TSRawEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SRawEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SRawEvent*) (soff))->~G__TSRawEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SRawEventDict_278_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SRawEvent* dest = (SRawEvent*) G__getstructoffset();
   *dest = *(SRawEvent*) libp->para[0].ref;
   const SRawEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SRawMCEvent */
static int G__SRawEventDict_292_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SRawMCEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_292_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRawMCEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_292_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SRawMCEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_292_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SRawMCEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_292_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SRawMCEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_292_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRawMCEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_292_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SRawMCEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_292_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SRawMCEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SRawEventDict_292_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SRawMCEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__SRawEventDict_292_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SRawMCEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SRawMCEvent[n];
     } else {
       p = new((void*) gvp) SRawMCEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SRawMCEvent;
     } else {
       p = new((void*) gvp) SRawMCEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SRawEventDict_292_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SRawMCEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SRawMCEvent(*(SRawMCEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SRawMCEvent G__TSRawMCEvent;
static int G__SRawEventDict_292_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SRawMCEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SRawMCEvent*) (soff+(sizeof(SRawMCEvent)*i)))->~G__TSRawMCEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SRawMCEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SRawMCEvent*) (soff))->~G__TSRawMCEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SRawEventDict_292_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SRawMCEvent* dest = (SRawMCEvent*) G__getstructoffset();
   *dest = *(SRawMCEvent*) libp->para[0].ref;
   const SRawMCEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Hit */

/* SRawEvent */

/* SRawMCEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSRawEventDict {
 public:
  G__Sizep2memfuncSRawEventDict(): p(&G__Sizep2memfuncSRawEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSRawEventDict::*p)();
};

size_t G__get_sizep2memfuncSRawEventDict()
{
  G__Sizep2memfuncSRawEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSRawEventDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SRawEventDictLN_Hit))) {
     Hit *G__Lderived;
     G__Lderived=(Hit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SRawEventDictLN_Hit),G__get_linked_tagnum(&G__SRawEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent))) {
     SRawEvent *G__Lderived;
     G__Lderived=(SRawEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent),G__get_linked_tagnum(&G__SRawEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent))) {
     SRawMCEvent *G__Lderived;
     G__Lderived=(SRawMCEvent*)0x1000;
     {
       SRawEvent *G__Lpbase=(SRawEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent),G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent),G__get_linked_tagnum(&G__SRawEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSRawEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SRawEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SRawEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SRawEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SRawEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SRawEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SRawEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__SRawEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__SRawEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__SRawEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Int_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SRawEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SRawEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Hit>",117,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SRawEventDictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SRawEventDictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,Int_t>",117,G__get_linked_tagnum(&G__SRawEventDictLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("hit_pair",117,G__get_linked_tagnum(&G__SRawEventDictLN_pairlEintcOintgR),0,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<SRawEvent::hit_pair>",117,G__get_linked_tagnum(&G__SRawEventDictLN_listlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<pair<int,int> >",117,G__get_linked_tagnum(&G__SRawEventDictLN_listlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Hit */
static void G__setup_memvarHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SRawEventDictLN_Hit));
   { Hit *p; p=(Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->index)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"index=",0,"unique index for identification");
   G__memvar_setup((void*)((long)(&p->detectorID)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"detectorID=",0,"assigned for each detector plane");
   G__memvar_setup((void*)((long)(&p->elementID)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"elementID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdcTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdcTime=",0,"raw TDC time");
   G__memvar_setup((void*)((long)(&p->driftDistance)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"driftDistance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pos=",0,"actual measurement in either X, Y, U or V direction");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_HitcLcLhitQuality),-1,-2,1,G__FastAllocString(2048).Format("inTime=%lldLL",(long long)Hit::inTime).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_HitcLcLhitQuality),-1,-2,1,G__FastAllocString(2048).Format("hodoMask=%lldLL",(long long)Hit::hodoMask).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_HitcLcLhitQuality),-1,-2,1,G__FastAllocString(2048).Format("triggerMask=%lldLL",(long long)Hit::triggerMask).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"flag=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SRawEvent */
static void G__setup_memvarSRawEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent));
   { SRawEvent *p; p=(SRawEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("MATRIX1=%lldLL",(long long)SRawEvent::MATRIX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("MATRIX2=%lldLL",(long long)SRawEvent::MATRIX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("MATRIX3=%lldLL",(long long)SRawEvent::MATRIX3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("MATRIX4=%lldLL",(long long)SRawEvent::MATRIX4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("MATRIX5=%lldLL",(long long)SRawEvent::MATRIX5).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("NIM1=%lldLL",(long long)SRawEvent::NIM1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("NIM2=%lldLL",(long long)SRawEvent::NIM2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("NIM3=%lldLL",(long long)SRawEvent::NIM3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("NIM4=%lldLL",(long long)SRawEvent::NIM4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__SRawEventDictLN_SRawEventcLcLTriggerType),-1,-2,1,G__FastAllocString(2048).Format("NIM5=%lldLL",(long long)SRawEvent::NIM5).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSpillID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTriggerBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fTargetPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTurnID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRFID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIntensity[33]=",0,"16 before, one onset, and 16 after");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fTriggerEmu=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fNRoads[4]=",0,"0, positive top; 1, positive bottom; 2, negative top; 3, negative bottom");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNHits[63]=",0,"0 for all hits, 1, 2, ..., 24 for number of hits in plane 1, 2, ..., 24");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR),G__defined_typename("vector<Hit>"),-1,4,"fAllHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR),G__defined_typename("vector<Hit>"),-1,4,"fTriggerHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SRawMCEvent */
static void G__setup_memvarSRawMCEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent));
   { SRawMCEvent *p; p=(SRawMCEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->weight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"weight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mass)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"xF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"x1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"x2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->costh)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"costh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"vtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nHits[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_vertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_vertex[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_station1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_station1[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_station1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"v_station1[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_station2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_station2[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_station2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"v_station2[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_station3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_station3[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_station3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"v_station3[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_station4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_station4[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_station4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"v_station4[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_stationH1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_stationH1[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_stationH1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"v_stationH1[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_stationH2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_stationH2[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_stationH2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"v_stationH2[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_stationH3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_stationH3[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_stationH3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"v_stationH3[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_stationH4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"p_stationH4[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v_stationH4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TVector3),-1,-1,1,"v_stationH4[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SRawEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSRawEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHit(void) {
   /* Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SRawEventDictLN_Hit));
   G__memfunc_setup("Hit",293,G__SRawEventDict_276_0_1, 105, G__get_linked_tagnum(&G__SRawEventDictLN_Hit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hit",293,G__SRawEventDict_276_0_2, 105, G__get_linked_tagnum(&G__SRawEventDictLN_Hit), -1, 0, 1, 1, 1, 0, "i - - 0 - uniqueID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hit",293,G__SRawEventDict_276_0_3, 105, G__get_linked_tagnum(&G__SRawEventDictLN_Hit), -1, 0, 2, 1, 1, 0, 
"i - - 0 - detectorID i - - 0 - elementID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInTime",802,G__SRawEventDict_276_0_4, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHodoMask",1010,G__SRawEventDict_276_0_5, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTriggerMask",1340,G__SRawEventDict_276_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFlag",710,G__SRawEventDict_276_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - flag_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetFlag",925,G__SRawEventDict_276_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - flag_input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInTime",914,G__SRawEventDict_276_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHodoMask",1122,G__SRawEventDict_276_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerMask",1452,G__SRawEventDict_276_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSign",721,G__SRawEventDict_276_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("uniqueID",804,G__SRawEventDict_276_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetectorID",1287,G__SRawEventDict_276_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - uniqueID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getElementID",1175,G__SRawEventDict_276_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - uniqueID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__SRawEventDict_276_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "u 'Hit' - 11 - elem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__SRawEventDict_276_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'Hit' - 11 - elem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__SRawEventDict_276_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SRawEventDict_276_0_19, 85, G__get_linked_tagnum(&G__SRawEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SRawEventDict_276_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SRawEventDict_276_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SRawEventDict_276_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SRawEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SRawEventDict_276_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SRawEventDict_276_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SRawEventDict_276_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SRawEventDict_276_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SRawEventDict_276_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Hit", 293, G__SRawEventDict_276_0_31, (int) ('i'), G__get_linked_tagnum(&G__SRawEventDictLN_Hit), -1, 0, 1, 1, 1, 0, "u 'Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Hit", 419, G__SRawEventDict_276_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SRawEventDict_276_0_33, (int) ('u'), G__get_linked_tagnum(&G__SRawEventDictLN_Hit), -1, 1, 1, 1, 1, 0, "u 'Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSRawEvent(void) {
   /* SRawEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent));
   G__memfunc_setup("SRawEvent",895,G__SRawEventDict_278_0_1, 105, G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitsIndexInDetector",2241,G__SRawEventDict_278_0_2, 117, G__get_linked_tagnum(&G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR), G__defined_typename("list<Int_t>"), 0, 1, 1, 1, 0, "s - 'Short_t' 0 - detectorID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitsIndexInDetector",2241,G__SRawEventDict_278_0_3, 117, G__get_linked_tagnum(&G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR), G__defined_typename("list<Int_t>"), 0, 3, 1, 1, 0, 
"s - 'Short_t' 0 - detectorID d - 'Double_t' 0 - x_exp "
"d - 'Double_t' 0 - win", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitsIndexInSuperDetector",2768,G__SRawEventDict_278_0_4, 117, G__get_linked_tagnum(&G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR), G__defined_typename("list<Int_t>"), 0, 1, 1, 1, 0, "s - 'Short_t' 0 - detectorID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitsIndexInDetectors",2356,G__SRawEventDict_278_0_5, 117, G__get_linked_tagnum(&G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR), G__defined_typename("list<Int_t>"), 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - detectorIDs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAdjacentHitsIndex",2026,G__SRawEventDict_278_0_6, 117, G__get_linked_tagnum(&G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR), G__defined_typename("list<Int_t>"), 0, 1, 1, 1, 0, "u 'Hit' - 1 - _hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsAll",1087,G__SRawEventDict_278_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNTriggerHits",1530,G__SRawEventDict_278_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNChamberHitsAll",1777,G__SRawEventDict_278_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHodoHitsAll",1481,G__SRawEventDict_278_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNPropHitsAll",1504,G__SRawEventDict_278_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInD0",1105,G__SRawEventDict_278_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInD1",1106,G__SRawEventDict_278_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInD2",1107,G__SRawEventDict_278_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInD3",1108,G__SRawEventDict_278_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInD3p",1220,G__SRawEventDict_278_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInD3m",1217,G__SRawEventDict_278_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInH1",1110,G__SRawEventDict_278_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInH2",1111,G__SRawEventDict_278_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInH3",1112,G__SRawEventDict_278_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInH4",1113,G__SRawEventDict_278_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInP1",1118,G__SRawEventDict_278_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInP2",1119,G__SRawEventDict_278_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInDetector",1815,G__SRawEventDict_278_0_24, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "s - 'Short_t' 0 - detectorID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInSuperDetector",2342,G__SRawEventDict_278_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "s - 'Short_t' 0 - detectorID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsInDetectors",1930,G__SRawEventDict_278_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - detectorIDs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAllHits",1009,G__SRawEventDict_278_0_27, 117, G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR), G__defined_typename("vector<Hit>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerHits",1452,G__SRawEventDict_278_0_28, 117, G__get_linked_tagnum(&G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR), G__defined_typename("vector<Hit>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerHit",1337,G__SRawEventDict_278_0_29, 117, G__get_linked_tagnum(&G__SRawEventDictLN_Hit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__SRawEventDict_278_0_30, 117, G__get_linked_tagnum(&G__SRawEventDictLN_Hit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__SRawEventDict_278_0_31, 117, G__get_linked_tagnum(&G__SRawEventDictLN_Hit), -1, 0, 2, 1, 1, 0, 
"s - 'Short_t' 0 - detectorID s - 'Short_t' 0 - elementID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHitFlag",1003,G__SRawEventDict_278_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index s - 'Short_t' 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHitFlag",1003,G__SRawEventDict_278_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"s - 'Short_t' 0 - detectorID s - 'Short_t' 0 - elementID "
"s - 'Short_t' 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunID",770,G__SRawEventDict_278_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventID",975,G__SRawEventDict_278_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpillID",977,G__SRawEventDict_278_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventInfo",1242,G__SRawEventDict_278_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - runID i - 'Int_t' 0 - spillID "
"i - 'Int_t' 0 - eventID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__SRawEventDict_278_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'Hit' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerHit",1349,G__SRawEventDict_278_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - index u 'Hit' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insertHit",954,G__SRawEventDict_278_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Hit' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insertTriggerHit",1678,G__SRawEventDict_278_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Hit' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findHit",710,G__SRawEventDict_278_0_42, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"s - 'Short_t' 0 - detectorID s - 'Short_t' 0 - elementID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reIndex",719,G__SRawEventDict_278_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' doSort", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPartialHitPairsInSuperDetector",3377,G__SRawEventDict_278_0_44, 117, G__get_linked_tagnum(&G__SRawEventDictLN_listlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR), G__defined_typename("list<SRawEvent::hit_pair>"), 0, 1, 1, 1, 0, "s - 'Short_t' 0 - detectorID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPartialHitPairsInSuperDetector",3377,G__SRawEventDict_278_0_45, 117, G__get_linked_tagnum(&G__SRawEventDictLN_listlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR), G__defined_typename("list<SRawEvent::hit_pair>"), 0, 3, 1, 1, 0, 
"s - 'Short_t' 0 - detectorID d - 'Double_t' 0 - x_exp "
"d - 'Double_t' 0 - wind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerBits",1446,G__SRawEventDict_278_0_46, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerBits",1458,G__SRawEventDict_278_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - triggers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerBits",1458,G__SRawEventDict_278_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - triggers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTriggeredBy",1332,G__SRawEventDict_278_0_49, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNIMTriggered",1373,G__SRawEventDict_278_0_50, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFPGATriggered",1431,G__SRawEventDict_278_0_51, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isEmuTriggered",1440,G__SRawEventDict_278_0_52, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRoadsPos",1209,G__SRawEventDict_278_0_53, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRoadsNeg",1185,G__SRawEventDict_278_0_54, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRoadsPosTop",1516,G__SRawEventDict_278_0_55, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRoadsPosBot",1502,G__SRawEventDict_278_0_56, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRoadsNegTop",1492,G__SRawEventDict_278_0_57, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRoadsNegBot",1478,G__SRawEventDict_278_0_58, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRoads",903,G__SRawEventDict_278_0_59, 83, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerEmu",1351,G__SRawEventDict_278_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNRoads",915,G__SRawEventDict_278_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "S - 'Short_t' 0 - nRoads", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNRoads",915,G__SRawEventDict_278_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - nRoads", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTargetPos",1241,G__SRawEventDict_278_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTargetPos",1253,G__SRawEventDict_278_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - targetPos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTurnID",886,G__SRawEventDict_278_0_65, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRFID",613,G__SRawEventDict_278_0_66, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntensity",1287,G__SRawEventDict_278_0_67, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntensity",1287,G__SRawEventDict_278_0_68, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntensitySumBefore",2191,G__SRawEventDict_278_0_69, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '16' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntensitySumAfter",2094,G__SRawEventDict_278_0_70, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '16' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntensityAll",1568,G__SRawEventDict_278_0_71, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTurnID",898,G__SRawEventDict_278_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - turnID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRFID",625,G__SRawEventDict_278_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rfID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIntensity",1299,G__SRawEventDict_278_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 10 - intensity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIntensity",1299,G__SRawEventDict_278_0_75, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIntensity",1299,G__SRawEventDict_278_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mergeEvent",1042,G__SRawEventDict_278_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "u 'SRawEvent' - 11 - rawEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventInfo",1242,G__SRawEventDict_278_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "U 'SRawEvent' - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__SRawEventDict_278_0_79, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__SRawEventDict_278_0_80, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__SRawEventDict_278_0_81, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SRawEventDict_278_0_82, 85, G__get_linked_tagnum(&G__SRawEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SRawEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SRawEventDict_278_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRawEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SRawEventDict_278_0_84, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SRawEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SRawEventDict_278_0_85, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SRawEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SRawEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SRawEventDict_278_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SRawEventDict_278_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRawEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SRawEventDict_278_0_91, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SRawEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SRawEventDict_278_0_92, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRawEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SRawEventDict_278_0_93, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SRawEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SRawEvent", 895, G__SRawEventDict_278_0_94, (int) ('i'), G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent), -1, 0, 1, 1, 1, 0, "u 'SRawEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SRawEvent", 1021, G__SRawEventDict_278_0_95, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SRawEventDict_278_0_96, (int) ('u'), G__get_linked_tagnum(&G__SRawEventDictLN_SRawEvent), -1, 1, 1, 1, 1, 0, "u 'SRawEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSRawMCEvent(void) {
   /* SRawMCEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent));
   G__memfunc_setup("Class",502,G__SRawEventDict_292_0_1, 85, G__get_linked_tagnum(&G__SRawEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SRawMCEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SRawEventDict_292_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRawMCEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SRawEventDict_292_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SRawMCEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SRawEventDict_292_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SRawMCEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SRawEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SRawEventDict_292_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SRawEventDict_292_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRawMCEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SRawEventDict_292_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SRawMCEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SRawEventDict_292_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SRawMCEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SRawEventDict_292_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SRawMCEvent::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("SRawMCEvent", 1039, G__SRawEventDict_292_0_13, (int) ('i'), G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SRawMCEvent", 1039, G__SRawEventDict_292_0_14, (int) ('i'), G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent), -1, 0, 1, 1, 1, 0, "u 'SRawMCEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SRawMCEvent", 1165, G__SRawEventDict_292_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SRawEventDict_292_0_16, (int) ('u'), G__get_linked_tagnum(&G__SRawEventDictLN_SRawMCEvent), -1, 1, 1, 1, 1, 0, "u 'SRawMCEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSRawEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSRawEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSRawEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SRawEventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR = { "list<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_Hit = { "Hit" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_HitcLcLhitQuality = { "Hit::hitQuality" , 101 , -1 };
G__linked_taginfo G__SRawEventDictLN_SRawEvent = { "SRawEvent" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR = { "vector<Hit,allocator<Hit> >" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Hit,allocator<Hit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__SRawEventDictLN_listlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "list<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__SRawEventDictLN_SRawEventcLcLTriggerType = { "SRawEvent::TriggerType" , 101 , -1 };
G__linked_taginfo G__SRawEventDictLN_SRawMCEvent = { "SRawMCEvent" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSRawEventDict() {
  G__SRawEventDictLN_TClass.tagnum = -1 ;
  G__SRawEventDictLN_TBuffer.tagnum = -1 ;
  G__SRawEventDictLN_TMemberInspector.tagnum = -1 ;
  G__SRawEventDictLN_TObject.tagnum = -1 ;
  G__SRawEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SRawEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SRawEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SRawEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__SRawEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__SRawEventDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__SRawEventDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__SRawEventDictLN_TVector3.tagnum = -1 ;
  G__SRawEventDictLN_Hit.tagnum = -1 ;
  G__SRawEventDictLN_HitcLcLhitQuality.tagnum = -1 ;
  G__SRawEventDictLN_SRawEvent.tagnum = -1 ;
  G__SRawEventDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__SRawEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR.tagnum = -1 ;
  G__SRawEventDictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SRawEventDictLN_pairlEintcOintgR.tagnum = -1 ;
  G__SRawEventDictLN_listlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__SRawEventDictLN_SRawEventcLcLTriggerType.tagnum = -1 ;
  G__SRawEventDictLN_SRawMCEvent.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSRawEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_listlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SRawEventDictLN_Hit),sizeof(Hit),-1,323840,(char*)NULL,G__setup_memvarHit,G__setup_memfuncHit);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_HitcLcLhitQuality);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SRawEventDictLN_SRawEvent),sizeof(SRawEvent),-1,292096,(char*)NULL,G__setup_memvarSRawEvent,G__setup_memfuncSRawEvent);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_vectorlEHitcOallocatorlEHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_reverse_iteratorlEvectorlEHitcOallocatorlEHitgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_listlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SRawEventDictLN_SRawEventcLcLTriggerType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SRawEventDictLN_SRawMCEvent),sizeof(SRawMCEvent),-1,290816,(char*)NULL,G__setup_memvarSRawMCEvent,G__setup_memfuncSRawMCEvent);
}
extern "C" void G__cpp_setupSRawEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSRawEventDict()");
  G__set_cpp_environmentSRawEventDict();
  G__cpp_setup_tagtableSRawEventDict();

  G__cpp_setup_inheritanceSRawEventDict();

  G__cpp_setup_typetableSRawEventDict();

  G__cpp_setup_memvarSRawEventDict();

  G__cpp_setup_memfuncSRawEventDict();
  G__cpp_setup_globalSRawEventDict();
  G__cpp_setup_funcSRawEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSRawEventDict();
  return;
}
class G__cpp_setup_initSRawEventDict {
  public:
    G__cpp_setup_initSRawEventDict() { G__add_setup_func("SRawEventDict",(G__incsetup)(&G__cpp_setupSRawEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSRawEventDict() { G__remove_setup_func("SRawEventDict"); }
};
G__cpp_setup_initSRawEventDict G__cpp_setup_initializerSRawEventDict;

